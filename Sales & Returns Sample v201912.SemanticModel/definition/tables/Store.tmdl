table Store
	lineageTag: c7307aed-3a68-484f-b3db-37452c0fc65a

	column StoreID
		dataType: int64
		formatString: 0
		lineageTag: 9a125138-00a3-4402-9850-df431f5645a8
		summarizeBy: none
		sourceColumn: StoreID

		annotation SummarizationSetBy = Automatic

	column Store
		dataType: string
		lineageTag: 7f8703b8-9e85-46a6-acc0-8834890ca5b0
		summarizeBy: none
		sourceColumn: Store

		annotation SummarizationSetBy = Automatic

	column Type
		dataType: string
		lineageTag: d6eb55d5-0560-4e0b-9050-a4e80dca9202
		summarizeBy: none
		sourceColumn: Type

		annotation SummarizationSetBy = Automatic

	column Longitude
		dataType: double
		lineageTag: bb09dc84-97c9-447c-b306-4eb6dfb03e89
		dataCategory: Longitude
		summarizeBy: none
		sourceColumn: Longitude

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column Latitude
		dataType: double
		lineageTag: 4f513f8b-99ee-4bd6-977f-07e0dc954476
		dataCategory: Latitude
		summarizeBy: none
		sourceColumn: Latitude

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column image
		dataType: string
		lineageTag: ff28cea2-3848-46ad-9faa-dd119abaaaa7
		summarizeBy: none
		sourceColumn: image

		annotation SummarizationSetBy = Automatic

	partition Store-6ef38b87-82a5-486d-ac13-9e4fbd79c1be = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("bZLNasNADITfxec0SPsjrY5paaFQSkohl5DDus3B4NjUsUsfv6tk7VKyJ8sLn0Yz0n5fYbWqNnUdz+n7+DMehy62qbwLvGZ21tv043At5MlKqqvDal8Zhdrma2oKFIrx2tWZNaBxxs2UtrqPQx1vIRJvxWQpH4TCDCn9HtvvqTSgMyySKUT6k/KpeIonVXru/jECQYAzA44uo14YSsXLsS/JMFp3RYJFNn5GtM8udpvh/HlsS6D3EK4gpwBhAfXxNY7TUMrCWnA5dnZgYHGlVrexLdmiQCZkW2yQabGFoFQzTKdbqQBANsfOQF4WKVR+259KlJcgIVMklI5kofT1bWrq0rYCIVieY0z7Ws4J1e1D3439uS9Ys4HAzJxmunA67q75GPuhKWXCHn3eG4ulfFSHXw==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [ManufacturerID = _t, Manufacturer = _t, Type = _t, Longitude = _t, Latitude = _t, image = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"ManufacturerID", Int64.Type}, {"Manufacturer", type text}, {"Type", type text}, {"Longitude", type number}, {"Latitude", type number}, {"image", type text}}),
				    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"ManufacturerID", "StoreID"}, {"Manufacturer", "Store"}})
				in
				    #"Renamed Columns"

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

